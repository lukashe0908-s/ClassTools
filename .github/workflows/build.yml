name: Build Electron

on:
  workflow_dispatch:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

jobs:
  build:
    runs-on: windows-latest

    strategy:
      matrix:
        node-version: [22.x]

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Enable Corepack
        run: corepack enable

      - name: Get version and short commit hash
        id: get_version_and_commit
        run: |
          $version = node -p "require('./package.json').version"
          $shortSha = git rev-parse --short=7 HEAD
          echo "VERSION=$version" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "SHORT_SHA=$shortSha" | Out-File -FilePath $env:GITHUB_ENV -Append

      - name: Check if tag exists
        id: check_tag
        run: |
          git fetch --tags
          if (git rev-parse "v${{ env.VERSION }}" -q) {
            echo "exists=true" | Out-File -FilePath $env:GITHUB_OUTPUT -Append
          } else {
            echo "exists=false" | Out-File -FilePath $env:GITHUB_OUTPUT -Append
          }

      - name: Stop if tag exists
        if: steps.check_tag.outputs.exists == 'true'
        run: |
          echo "Tag v${{ env.VERSION }} already exists. Skipping build."
          exit 0

      - name: Install dependencies
        run: yarn install

      - name: Build
        run: yarn build

      - name: Create Git tag for this version
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag v${{ env.VERSION }}
          git push origin v${{ env.VERSION }}

      - name: Build Changelog
        id: github_release
        uses: mikepenz/release-changelog-builder-action@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.VERSION }}
          name: v${{ env.VERSION }}
          body: ${{steps.github_release.outputs.changelog}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file_glob: true
          file: |
            build/dist/*.exe
            build/dist/*.blockmap
          tag: v${{ env.VERSION }}
          overwrite: true
